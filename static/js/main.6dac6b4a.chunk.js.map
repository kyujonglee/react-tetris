{"version":3,"sources":["gameHelpers.js","tetrominos.js","hooks/usePlayer.js","hooks/useStage.js","components/Cell.js","components/Stage.js","components/Display.js","components/StartButton.js","components/Tetris.js","hooks/useGameStatus.js","hooks/useInterval.js","App.js","index.js"],"names":["createStage","Array","from","fill","checkCollision","player","stage","moveX","x","moveY","y","tetromino","length","pos","TETROMINOS","0","shape","color","I","J","L","O","S","T","Z","randomTetromino","randTetromino","Math","floor","random","usePlayer","useState","collided","setPlayer","rotate","matrix","dir","rotatedTetro","map","_","idx","col","row","reverse","resetPlayer","useCallback","STAGE_WIDTH","prev","clonedPlayer","JSON","parse","stringify","offset","abs","useStage","setStage","rowsCleared","setRowsCleared","useEffect","updateStage","prevStage","newStage","cell","forEach","value","reduce","acc","findIndex","unshift","push","sweepRows","StyledCell","styled","div","props","type","React","memo","StyledStage","height","width","Stage","key","StyledDisplay","gameOver","Display","text","StyledStartButton","button","StartButton","callback","onClick","StyledTetrisWrapper","StyledTetris","Tetris","dropTime","setDropTime","setGameOver","updatePlayerPos","playerRotate","score","setScore","rows","setRows","level","setLevel","linePoints","calcScore","useGameStatus","movePlayer","drop","move","keyCode","delay","savedCallback","useRef","current","id","setInterval","clearInterval","useInterval","console","log","role","tabIndex","onKeyDown","e","onKeyUp","App","className","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6dac6b4a.chunk.js","sourcesContent":["export const STAGE_WIDTH = 12;\nexport const STAGE_HEIGHT = 20;\n\nexport const createStage = () =>\n  Array.from(Array(STAGE_HEIGHT), () =>\n    new Array(STAGE_WIDTH).fill([0, 'clear'])\n  );\n\nexport const checkCollision = (player, stage, { x: moveX, y: moveY }) => {\n  for (let y = 0; y < player.tetromino.length; y++) {\n    for (let x = 0; x < player.tetromino[y].length; x++) {\n      if (player.tetromino[y][x] !== 0) {\n        if (\n          !stage[y + player.pos.y + moveY] ||\n          !stage[y + player.pos.y + moveY][x + player.pos.x + moveX] ||\n          stage[y + player.pos.y + moveY][x + player.pos.x + moveX][1] !==\n            'clear'\n        ) {\n          return true;\n        }\n      }\n    }\n  }\n};\n","export const TETROMINOS = {\n    0: { shape: [[0]], color : '0,0,0'},\n    I: {\n        shape: [\n            [0, 'I', 0, 0],\n            [0, 'I', 0, 0],\n            [0, 'I', 0, 0],\n            [0, 'I', 0, 0]\n        ],\n        color : '80, 227, 230'\n    },\n    J: {\n        shape: [\n            [0,   'J', 0],\n            [0,   'J', 0],\n            ['J', 'J', 0]\n        ],\n        color : '36, 96, 223',\n    },\n    L: {\n        shape: [\n            [0, 'L', 0],\n            [0, 'L', 0],\n            [0, 'L', 'L']\n        ],\n        color : '223, 173, 36',\n    },\n    O: {\n        shape: [\n            ['O', 'O'],\n            ['O', 'O']\n        ],\n        color : '223, 217, 36',\n    },\n    S: {\n        shape: [\n            [0, 'S', 'S'],\n            ['S', 'S', 0],\n            [0, 0, 0]\n        ],\n        color : '48, 211, 56',\n    },\n    T: {\n        shape : [\n            ['T','T', 'T' ],\n            [0, 'T', 0],\n            [0,0,0]\n        ],\n        color : '132, 61, 198'\n    },\n    Z: {\n        shape : [\n            ['Z','Z',0],\n            [0,'Z', 'Z' ],\n            [0, 0, 0]\n        ],\n        color : '227, 78, 78'\n    }\n}\n\n// tetromino random 하게 제공하는 함수\nexport const randomTetromino = () => {\n    const tetrominos = 'IJLOSTZ';\n    const randTetromino = tetrominos[Math.floor(Math.random() * tetrominos.length)];\n    return TETROMINOS[randTetromino];\n}","import { useState, useCallback } from 'react';\n\nimport { TETROMINOS, randomTetromino } from '../tetrominos';\nimport { STAGE_WIDTH, checkCollision } from '../gameHelpers';\n\nexport const usePlayer = () => {\n  const [player, setPlayer] = useState({\n    pos: { x: 0, y: 0 },\n    tetromino: TETROMINOS[0].shape,\n    collided: false\n  });\n\n  const rotate = (matrix, dir) => {\n    // the rows -> cols (transpose)\n    const rotatedTetro = matrix.map((_, idx) => matrix.map(col => col[idx]));\n    // reverse each row to get a rotated matrix\n    if (dir > 0) return rotatedTetro.map(row => row.reverse()); // clockwise\n    return rotatedTetro.reverse(); //counter clockwise\n  };\n\n  const playerRotate = (stage, dir) => {\n    const clonedPlayer = JSON.parse(JSON.stringify(player));\n    clonedPlayer.tetromino = rotate(clonedPlayer.tetromino, dir);\n\n    const pos = clonedPlayer.pos.x;\n    let offset = 1;\n    while (true) {\n      if (Math.abs(offset) > clonedPlayer.tetromino[0].length / 2) {\n        rotate(clonedPlayer.tetromino, -dir);\n        clonedPlayer.pos.x = pos;\n        return;\n      }\n      if (!checkCollision(clonedPlayer, stage, { x: 0, y: 0 })) break;\n      clonedPlayer.pos.x = pos + offset;\n      if (!checkCollision(clonedPlayer, stage, { x: 0, y: 0 })) break;\n      clonedPlayer.pos.x = pos - offset;\n      if (!checkCollision(clonedPlayer, stage, { x: 0, y: 0 })) break;\n      offset++;\n    }\n    // while (checkCollision(clonedPlayer, stage, { x: 0, y: 0 })) {\n    //     // tetromino의 블럭 크기보다 더 많이 움직여야 하면 rotate 하지 않음.\n    //     // 코드 나중에 수정해볼 것!\n    //   if (Math.abs(offset) > clonedPlayer.tetromino[0].length) {\n    //     rotate(clonedPlayer.tetromino, -dir);\n    //     clonedPlayer.pos.x = pos;\n    //     return;\n    //   }\n    //   clonedPlayer.pos.x += offset;\n    //   offset = -(offset + (offset > 0 ? 1 : -1));\n    // }\n\n    setPlayer(clonedPlayer);\n  };\n\n  const updatePlayerPos = ({ x, y, collided }) => {\n    setPlayer(prev => ({\n      ...prev,\n      pos: { x: (prev.pos.x += x), y: (prev.pos.y += y) },\n      collided\n    }));\n  };\n\n  const resetPlayer = useCallback(() => {\n    setPlayer({\n      pos: { x: STAGE_WIDTH / 2 - 2, y: 0 },\n      tetromino: randomTetromino().shape,\n      collided: false\n    });\n  }, []);\n\n  return [player, updatePlayerPos, resetPlayer, playerRotate];\n};\n","import { useState, useEffect } from 'react';\nimport { createStage } from '../gameHelpers';\n\nexport const useStage = (player, resetPlayer) => {\n  const [stage, setStage] = useState(createStage());\n  const [rowsCleared, setRowsCleared] = useState(0);\n\n  useEffect(() => {\n    setRowsCleared(0);\n    const sweepRows = newStage =>\n      newStage.reduce((acc, row) => {\n        if (row.findIndex(cell => cell[0] === 0) === -1) {\n          setRowsCleared(prev => prev + 1);\n          acc.unshift(new Array(newStage[0].length).fill([0, 'clear']));\n          return acc;\n        }\n        acc.push(row);\n        return acc;\n      }, []);\n\n    // tetromino가 게임종료 직전까지 왔을 때 그려지면 gameOver가 되어야 하지만,\n    // 다시 그려지는 버그!\n    const updateStage = prevStage => {\n      const newStage = prevStage.map(row =>\n        row.map(cell => (cell[1] === 'clear' ? [0, 'clear'] : cell))\n      );\n\n      player.tetromino.forEach((row, y) => {\n        row.forEach((value, x) => {\n          if (value !== 0) {\n            newStage[y + player.pos.y][x + player.pos.x] = [\n              value,\n              `${player.collided ? 'merged' : 'clear'}`\n            ];\n          }\n        });\n      });\n\n      if (player.collided) {\n        resetPlayer();\n        return sweepRows(newStage);\n      }\n\n      return newStage;\n    };\n\n    setStage(prev => updateStage(prev));\n  }, [player, resetPlayer]);\n\n  return [stage, setStage, rowsCleared];\n};\n","import React from 'react';\nimport { TETROMINOS } from '../tetrominos';\nimport styled from 'styled-components';\n\nconst StyledCell = styled.div`\n  width: auto;\n  background: rgba(${props => props.color}, 0.8);\n  border: ${props => (props.type === 0 ? '0px solid' : '4px solid')};\n  border-bottom-color: rgba(${props => props.color}, 0.1);\n  border-right-color: rgba(${props => props.color}, 1);\n  border-top-color: rgba(${props => props.color}, 1);\n  border-left-color: rgba(${props => props.color}, 0.1);\n`;\n\nconst Cell = ({ type }) => (\n  <StyledCell type={type} color={TETROMINOS[type].color} />\n);\n\nexport default React.memo(Cell);\n","import React from 'react';\n\nimport Cell from './Cell';\nimport styled from 'styled-components';\n\nconst StyledStage = styled.div`\n  display: grid;\n  grid-template-rows: repeat(\n    ${props => props.height},\n    calc(25vw / ${props => props.width})\n  );\n  grid-template-columns: repeat(${props => props.width}, 1fr);\n  grid-gap: 1px;\n  border: 2px solid #333;\n  width: 100%;\n  max-width: 25vw;\n  background-color: #111;\n`;\n\nconst Stage = ({ stage }) => (\n  <StyledStage width={stage[0].length} height={stage.length}>\n    {stage.map(row => row.map((cell, x) => <Cell key={x} type={cell[0]} />))}\n  </StyledStage>\n);\n\nexport default Stage;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledDisplay = styled.div`\n  box-sizing: border-box;\n  display: flex;\n  align-items: center;\n  margin-bottom: 20px;\n  padding: 20px;\n  border: 4px solid #333;\n  min-height: 30px;\n  width: 100%;\n  border-radius: 20px;\n  color: ${props => (props.gameOver ? 'red' : '#999')};\n  background: #000;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen,\n    Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n`;\n\nconst Display = ({ gameOver, text }) => (\n  <StyledDisplay gameOver={gameOver}>{text}</StyledDisplay>\n);\n\nexport default Display;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledStartButton = styled.button`\n  all: unset;\n  box-sizing: border-box;\n  margin-bottom: 20px;\n  padding: 20px;\n  min-height: 30px;\n  width: 100%;\n  border-radius: 20px;\n  border: none;\n  color: white;\n  background: #333;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen,\n    Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n  font-size: 1.2em;\n  text-align : center;\n  cursor: pointer;\n`;\n\nconst StartButton = ({ callback }) => (\n  <StyledStartButton onClick={callback}>Start Game</StyledStartButton>\n);\n\nexport default StartButton;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { createStage, checkCollision } from '../gameHelpers';\n\n// Custom Hooks\nimport { useInterval } from '../hooks/useInterval';\nimport { usePlayer } from '../hooks/usePlayer';\nimport { useStage } from '../hooks/useStage';\nimport { useGameStatus } from '../hooks/useGameStatus';\n\n// Components\nimport Stage from './Stage';\nimport Display from './Display';\nimport StartButton from './StartButton';\n\nconst StyledTetrisWrapper = styled.div`\n  width: 100vw;\n  height: 100vh;\n  background-color: #130f40;\n  overflow: hidden;\n`;\n\nconst StyledTetris = styled.div`\n  display: flex;\n  align-items: flex-start;\n  padding: 40px;\n  margin: 0 auto;\n  max-width: 900px;\n\n  aside {\n    width: 100%;\n    max-width: 200px;\n    display: block;\n    padding: 0 20px;\n  }\n`;\n\nconst DELAY_TIME = 500;\n\nconst Tetris = () => {\n  const [dropTime, setDropTime] = useState(null);\n  const [gameOver, setGameOver] = useState(false);\n\n  const [player, updatePlayerPos, resetPlayer, playerRotate] = usePlayer();\n  const [stage, setStage, rowsCleared] = useStage(player, resetPlayer);\n  const [score, setScore, rows, setRows, level, setLevel] = useGameStatus(\n    rowsCleared\n  );\n\n  const movePlayer = dir => {\n    if (!checkCollision(player, stage, { x: dir, y: 0 }))\n      updatePlayerPos({ x: dir, y: 0 });\n  };\n\n  const startGame = () => {\n    setStage(createStage());\n    setDropTime(DELAY_TIME);\n    resetPlayer();\n    setGameOver(false);\n    setScore(0);\n    setRows(0);\n    setLevel(0);\n  };\n\n  const drop = () => {\n    if (rows > (level + 1) * 10) {\n      setLevel(prev => prev + 1);\n      setDropTime(DELAY_TIME / (level + 1) + 100);\n    }\n    if (!checkCollision(player, stage, { x: 0, y: 1 })) {\n      updatePlayerPos({ x: 0, y: 1, collided: false });\n    } else {\n      if (player.pos.y < 1) {\n        setGameOver(true);\n        setDropTime(null);\n      }\n      updatePlayerPos({ x: 0, y: 0, collided: true });\n    }\n  };\n\n  const keyUp = ({ keyCode }) => {\n    if (!gameOver) {\n      if (keyCode === 40) {\n        setDropTime(DELAY_TIME / (level + 1) + 100);\n      }\n    }\n  };\n\n  const dropPlayer = () => {\n    setDropTime(null);\n    drop();\n  };\n\n  const move = ({ keyCode }) => {\n    if (!gameOver) {\n      if (keyCode === 37) {\n        // left\n        movePlayer(-1);\n      } else if (keyCode === 39) {\n        // right\n        movePlayer(1);\n      } else if (keyCode === 40) {\n        dropPlayer();\n      } else if (keyCode === 38) {\n        playerRotate(stage, 1);\n      }\n    }\n  };\n\n  useInterval(() => {\n    drop();\n  }, dropTime);\n\n  console.log('re-render');\n  return (\n    <StyledTetrisWrapper\n      role=\"button\"\n      tabIndex=\"0\"\n      onKeyDown={e => move(e)}\n      onKeyUp={keyUp}\n    >\n      <StyledTetris>\n        <Stage stage={stage} />\n        <aside>\n          {gameOver ? (\n            <Display gameOver={gameOver} text=\"Game Over\" />\n          ) : (\n            <div>\n              <Display text={`Score: ${score}`} />\n              <Display text={`Rows: ${rows}`} />\n              <Display text={`Level: ${level}`} />\n            </div>\n          )}\n          <StartButton callback={startGame} />\n        </aside>\n      </StyledTetris>\n    </StyledTetrisWrapper>\n  );\n};\n\nexport default Tetris;\n","import { useState, useEffect, useCallback } from 'react';\n\nexport const useGameStatus = rowsCleared => {\n  const [score, setScore] = useState(0);\n  const [rows, setRows] = useState(0);\n  const [level, setLevel] = useState(0);\n\n  const linePoints = [40, 100, 300, 1200];\n\n  const calcScore = useCallback(()=> {\n    if(rowsCleared > 0) {\n        setScore(prev => prev + linePoints[rowsCleared - 1] * (level + 1));\n        setRows(prev => prev + rowsCleared);\n    }  \n  }, [level, linePoints, rowsCleared]);\n\n  useEffect(()=> {\n    calcScore();\n  }, [calcScore, rowsCleared, score]);\n\n  return [score, setScore, rows, setRows, level, setLevel];\n};\n","import { useEffect, useRef } from 'react';\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef();\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n      return () => {\n        clearInterval(id);\n      };\n    }\n  }, [delay]);\n}\n","import React from 'react';\nimport Tetris from './components/Tetris';\n\nconst App = () => (\n  <div className=\"App\">\n    <Tetris />\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}